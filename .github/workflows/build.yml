name: Create Release and Build

on:
  push:
    tags:
      - '*'
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Create changelog text
        id: changelog
        uses: loopwerk/tag-changelog@v1.0.4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          exclude_types: other,docs,ci,refactor,style,test,chore
      - name: Create release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.changelog.outputs.changes }}
          draft: true

  build:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        #os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Create Build Environment
      run: cmake -E make_directory ${{ github.workspace }}/Builds/CMake

      # run configuration on windows
    - name: Configure CMake (Windows)
      if: runner.os == 'Windows'
      working-directory: ${{ github.workspace }}/Builds/CMake
      run: cmake ${{ github.workspace }}

      # install deps on linux
    - name: Install Dependencies (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt update
        sudo apt install -y cmake build-essential pkg-config libasound2-dev libjack-jackd2-dev ladspa-sdk libcurl4-openssl-dev libfreetype6-dev libx11-dev libxcomposite-dev libxcursor-dev libxcursor-dev libxext-dev libxinerama-dev libxrandr-dev libxrender-dev libwebkit2gtk-4.0-dev libglu1-mesa-dev mesa-common-dev

      # configure on MacOS and Linux
    - name: Configure CMake (Linux & MacOS)
      if: runner.os == 'Linux' || runner.os == 'MacOS'
      shell: bash
      working-directory: ${{ github.workspace }}/Builds/CMake
      run: cmake -DCMAKE_BUILD_TYPE=Release ${{ github.workspace }}

      # build on all
    - name: Build
      shell: bash
      working-directory: ${{ github.workspace }}/Builds/CMake
      run: cmake --build ./ --config Release


      # Windows
    - name: Upload (Windows)
      if: runner.os == 'Windows'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        mv "${{ github.workspace }}/Builds/CMake/GnomeDistort2_artefacts/Release/VST3/GnomeDistort 2.vst3/Contents/x86_64-win/GnomeDistort 2.vst3" "${{ github.workspace }}/GnomeDistort-2_win-x64.vst3"
        gh release upload ${{ github.ref_name }} "${{ github.workspace }}/GnomeDistort-2_win-x64.vst3"

      # Linux
    - name: Zip (Linux)
      if: runner.os == 'Linux'
      working-directory: ${{ runner.workspace }}/Builds/CMake/GnomeDistort2_artefacts/Release/VST3
      run: zip -r "${{ github.workspace }}/GnomeDistort-2_VST3_linux-x64.zip" "GnomeDistort 2.vst3"
    - name: Upload (Linux)
      if: runner.os == 'Linux'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release upload ${{ github.ref_name }} "${{ github.workspace }}/GnomeDistort-2_VST3_linux-x64.zip"

      # MacOS
    - name: Zip VST3 (MacOS)
      if: runner.os == 'MacOS'
      working-directory: ${{ runner.workspace }}/Builds/CMake/GnomeDistort2_artefacts/Release/VST3
      run: zip -r "GnomeDistort-2_VST3_MacOS-x64.zip" "GnomeDistort 2.vst3"
    - name: Upload VST3 (MacOS)
      if: runner.os == 'MacOS'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: gh release upload ${{ github.ref_name }} "${{ runner.workspace }}/Builds/CMake/GnomeDistort2_artefacts/Release/VST3/GnomeDistort-2_VST3_MacOS-x64.zip"

    - name: Zip AU (MacOS)
      if: runner.os == 'MacOS'
      working-directory: ${{ runner.workspace }}/Builds/CMake/GnomeDistort2_artefacts/Release
      run: zip -r "GnomeDistort-2_AU_MacOS-x64.zip" "AU"
    - name: Upload AU (MacOS)
      if: runner.os == 'MacOS'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        zip -r "GnomeDistort 2_AU_MacOS-x64.zip" "AU"
        gh release upload ${{ github.ref_name }} "${{ runner.workspace }}/Builds/CMake/GnomeDistort2_artefacts/Release/GnomeDistort-2_AU_MacOS-x64.zip"
